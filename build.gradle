// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
	mavenCentral()
	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
	maven { url "http://nexus.hc.to/content/repositories/pub_releases" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext.mcversion = '1.13.2'
version = '0.1'

// In this section you declare the dependencies for your production and test code
dependencies {
	compile "org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT"
	compile "net.milkbowl.vault:VaultAPI:1.6"
	compile fileTree(dir: 'lib', include: '*.jar')
}

sourceSets {
	main {
		java {
			srcDir 'src'
		}
	}
}

jar {
	version = version
	from file('plugin.yml')
	from file('config.yml')
}

clean {
	delete fileTree(dir: 'lib', include: 'spigot-*.jar')
}

task setup(dependsOn: 'setupDownload') {
	def spigotJar = new File('lib/spigot-' + mcversion + '.jar')
	if (!spigotJar.exists()) {
		spigotJar.getParentFile().mkdirs();
		doFirst {
			javaexec {
				workingDir 'setup'
				classpath 'setup/BuildTools.jar'
				main 'org.spigotmc.builder.Builder'
				args '--rev', mcversion
			}
		}
		doLast {
			copy {
				from 'setup/spigot-' + mcversion + '.jar'
				into 'lib'
			}
		}
	}
}

task setupDownload {
	File buildTools = new File('setup/BuildTools.jar')
	if (!buildTools.exists()) {
		buildTools.getParentFile().mkdirs();
		println 'Downloading Spigot BuildTools...'
		new URL('https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar').withInputStream{ i -> buildTools.withOutputStream{ it << i }}
	}
}

build.dependsOn setup